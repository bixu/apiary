on:
  release:
    types: [created]

jobs:
  apiary:
    name: apiary ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-14
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - id: build
        run: |

          set -x
          if uname -m | grep -q x86_64 && uname -s | grep Darwin
          then
            export TARGET=x86_64-apple-darwin
          fi

          if uname -m | grep -q arm64 && uname -s | grep Darwin
          then
            export TARGET=aarch64-apple-darwin
          fi
          set +x

          uname -a
          echo "Rust target is $TARGET"
          echo "target=$TARGET" >> $GITHUB_OUTPUT

      - run: rustup toolchain install stable --profile minimal

      - run: rustup target add ${{ steps.build.outputs.target }}

      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84

      - name: Compile and release
        id: compile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUSTTARGET: ${{ steps.build.outputs.target }}
        run: |
          cargo build --release --target "${RUSTTARGET}"

      - name: Upload artifact
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029
        with:
          name: apiary ${{ steps.build.outputs.target }}
          path: |
            target/${{ steps.build.outputs.target }}/release/apiary
