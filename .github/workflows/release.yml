on:
  release:
    types: [created]
  pull_request:

jobs:
  apiary:
    name: apiary ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-14
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - id: build
        run: |

          set -x
          if uname -m | grep -q x86_64 && uname -s | grep Darwin
          then
            export TARGET=x86_64-apple-darwin
          fi

          if uname -m | grep -q arm64 && uname -s | grep Darwin
          then
            export TARGET=aarch64-apple-darwin
          fi
          set +x

          uname -a
          echo "Rust target is $TARGET"
          echo "target=$TARGET" >> $GITHUB_OUTPUT

      - run: rustup toolchain install stable --profile minimal

      - run: rustup target add ${{ steps.build.outputs.target }}

      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84

      - name: Compile and release
        id: compile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUSTTARGET: ${{ steps.build.outputs.target }}
        run: |
          cargo build --release --target "${RUSTTARGET}"

      - uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5
        with:
          artifacts: target/${{ steps.build.outputs.target }}/release/apiary
          generateReleaseNotes: true
          prerelease: true
